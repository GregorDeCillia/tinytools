% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/composerr.R
\name{composerr}
\alias{composerr}
\title{Compose error handlers (concatenate error messages)}
\usage{
composerr(
  text_1 = NULL,
  err_prior = NULL,
  text_2 = NULL,
  sep_1 = ": ",
  sep_2 = ": ",
  handler_default = NULL
)
}
\arguments{
\item{text_1}{A character string, which will be appended
at the beginning of the error message. The argument \code{sep_1} will be used
as text separator.}

\item{err_prior}{Optional error handling function
to which the message part should be appended.}

\item{text_2}{A character string, which will be appended
at the end of the error message. The argument \code{sep_2} will be used
as text separator.}

\item{sep_1}{A character string that is used as separator for the
concatenation of \code{text_1} at the beginning of the error message.}

\item{sep_2}{A character string that is used as separator for the
concatenation of \code{text_2} at the end of the error message.}

\item{handler_default}{An optional error handling function used
as default for the argument \code{handler} of the returned error handling
function \code{function(msg, handler) {handler(enrich_msg(msg))}}.}
}
\value{
A new error handling function that has an extended error message.
}
\description{
This function appends character strings to the error messages
existing error handling functions.
An error handling function may look as follows:
\code{err_h <- function(msg) stop(paste("Error in Objekt 'x':", msg, 'Please try again!'))}.
With \code{composerr()} it is possible to add additional text between
\itemize{
\item \code{"Error in Object 'x'"} and \code{msg} (use argument \code{text_1})
\item \code{msg} and \verb{Please try again!} (use argument \code{text_2})
}
}
\examples{
\dontrun{
# ------     composerr      ----------
# -- create a modified error handler in the same scope --
# check if variable 'obj' exists and holds value TRUE
obj <- FALSE
# original error handler
err_h <- composerr("Something is wrong with obj")
if (!exists("obj"))
  err_h("obj does not exist")
# Error: create more precise error handler (same scope)
err_h2 <- composerr("obj has wrong value", "err_h")
if (!obj)
  err_h2("Value is FALSE", handler = warning)
#--- resulting WARNING ---
# Warning: Something is wrong with obj: obj has wrong value: Value is FALSE}
}
